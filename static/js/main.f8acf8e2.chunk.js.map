{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","aria-checked","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","textt","document","getElementById","select","navigator","clipboard","writeText","trim","match","length","replace","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","backgroundImage","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f8acf8e2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n \r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg border border-dark  navbar-${props.mode==='theme'?'dark':'white'} bg-${props.mode==='theme'?'secondary':'white'} `}>\r\n    <div className=\"container-fluid\">\r\n      <a  className=\"navbar-brand text-primary font-weight-bold\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n         \r\n          <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Contact Us\r\n          </a>\r\n          <ul className=\"dropdown-menu bg-dark\">\r\n            <li><a  className={`dropdown-item text-${props.mode==='theme'?'light':'dark'} bg-${props.mode==='theme'?'dark':'white'}`} href=\"#\">Call  : 6378366695</a></li>\r\n            <li><a  className={`dropdown-item text-${props.mode==='theme'?'light':'dark'} bg-${props.mode==='theme'?'dark':'white'}`} href=\"#\">Email : harshitsoni7620@gmail.com</a></li>\r\n           \r\n          </ul>\r\n        </li>\r\n        \r\n        </ul>\r\n\r\n        <div className={`form-check form-switch text-${props.mode==='theme'?'light':'dark'} `}>\r\n     <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" aria-checked=\"true\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n       <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Light Mode</label>\r\n</div>\r\n        \r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    About:PropTypes.string.isRequired\r\n};\r\n","import React ,{useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick = () =>\r\n    {\r\n        console.log(\"uppercase was clicked\"+text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText); \r\n        props.showAlert(\"Letters convert to Upper case\" , \"success\");\r\n        \r\n    }\r\n\r\n    const handleDownclick = () =>\r\n    {\r\n        console.log(\"uppercase was clicked\"+text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText); \r\n        props.showAlert(\"Letters convert to Lower case\" , \"success\");\r\n  \r\n         \r\n    }\r\n    const clearText = () =>\r\n    {\r\n        let newText = \"\";\r\n        setText(newText); \r\n        props.showAlert(\"text cleared\" , \"success\");\r\n         \r\n    }\r\n\r\n    const copyText = () =>\r\n    {\r\n      let textt = document.getElementById(\"myBox\");\r\n      textt.select();\r\n      navigator.clipboard.writeText(textt.value);\r\n      props.showAlert(\"Copied to clipboard!\" , \"success\");\r\n    }\r\n\r\n    const handleOnChange=(event) =>\r\n    {\r\n        console.log(\"change\");\r\n        setText(event.target.value);\r\n        \r\n    }\r\n\r\n\r\n    \r\n    const [text,setText]= useState('');\r\n    // const [valuee,setValuee] = useState('false');\r\n \r\n  return (\r\n    <>\r\n<div  className='container' style={{color: props.mode==='theme'?'white':'black'}}>  \r\n\r\n<h2 className=\"d-inline\">{props.heading}</h2>\r\n<div  className=\"my-3\">\r\n  <textarea  className=\"form-control opacity-75 \" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='theme'?'black':'white' , color: props.mode==='theme'?'white':'black'}} id=\"myBox\" rows=\"10\"></textarea>\r\n</div>\r\n<button className='btn btn-primary mx-2 abc' onClick={handleUpclick}>Convert to Capital letters</button>\r\n<button className='btn btn-primary mx-2 abc' onClick={handleDownclick} >Convert to Small letters</button>\r\n<button className='btn btn-primary mx-2 abc' onClick={clearText}>Clear Text</button>\r\n<button className='btn btn-primary mx-2 abc' onClick={copyText}>Copy Text</button>\r\n\r\n\r\n\r\n</div>  \r\n<div className=\"container my-5 \" style={{color: props.mode==='theme'?'white':'black'}}>\r\n\r\n    <h5 className=\" bg-gradient-primary\"> Your Word Summary : </h5>\r\n    <p className=' opacity-75'>   {text.trim() === '' ? 0 : text.match(/\\S+/g).length} words and {text.replace(/\\s+/g, '').length} characters</p>\r\n\r\n</div>\r\n</>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n      \r\n    props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}!</strong> {props.alert.msg}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport Alert from './components/Alert';\r\nimport React ,{useState} from 'react';\r\n\r\nfunction App() {\r\n  const [mode , setMode] = useState('theme');\r\n  const [alert , setAlert] = useState(null);\r\n\r\n  const showAlert=(message , type) =>\r\n  {\r\n    setAlert({\r\n      msg:message,\r\n      type:type\r\n\r\n    })\r\n\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    },1500);\r\n  }\r\n  const toggleMode=() =>\r\n  {\r\n    if(mode==='theme')\r\n    {\r\n      document.body.style.backgroundImage = \"url('https://wallpaperaccess.com/plain-white')\"; \r\n    setMode('light');\r\n    showAlert(\"Light Mode is enable\" , \"success\");\r\n    \r\n    }\r\n    else{\r\n       document.body.style.backgroundImage = \"url('https://wallpaperset.com/w/full/b/b/9/194930.jpg')\"; \r\n      setMode('theme');\r\n      showAlert(\"Theme Mode is enable\" , \"success\");\r\n     \r\n    }\r\n  }\r\n  return (\r\n<>\r\n\r\n<Navbar title = \"Textour\" mode={mode} toggleMode={toggleMode}/>\r\n<Alert alert = {alert}/>\r\n<div className=\"container my-3\">\r\n            \r\n  <TextForm className=\"abc\" showAlert = {showAlert} heading= \"Enter your Text :  \" mode={mode}/>\r\n         \r\n          \r\n</div>\r\n\r\n\r\n</>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}